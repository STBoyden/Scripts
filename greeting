#!/bin/bash

function contains_up_or_down() {
    local input=${1:?contains_up_or_down: Must provide input argument}

    if [[ "$input" == *"DOWN"* ]] || [[ "$input" == *"UP"* ]]; then
        echo true
    else
        echo false
    fi
}

function is_connected() {
    local wifi_ipa=${1:?is_connected: Must provide wifi_ipa argument}
    local ethe_ipa=${2:?is_connected: Must provide ethe_ipa argument}

    if [[ "$(contains_up_or_down $wifi_ipa)" == true ]] \
        && [[ "$(contains_up_or_down $ethe_ipa)" == true ]]; then
        echo "${GREEN} Not connected\n"
    fi
}

source colours

free_space=$(df -h 2>/dev/null | egrep "(sd[a-z]|dm-[0-9]|pCloud)" \
                | awk 'function basename(file) {sub(".*/", "", file);return file} {print "\t", $6,"("$5")","["$3"/"$2"]","{"basename($1)"}"}' \
                | sed 's/ //' \
                | column -t -s ' ')
wifi_ipa=$(ip a | grep wlp | tail -n1 | awk '{print "\t",$9":" , $2}' | sed 's/\/.*//')
ethe_ipa=$(ip a | grep enp | tail -n1 | awk '{print "\t",$9":" , $2}' | sed 's/\/.*//')

hostname=$(hostname)
os=$(uname -o)
kernel=$(uname -r)
uptime=$(uptime -p | awk '{$1=""; print}' | sed 's/^\s//')


echo -e "\n${WHITE}OS ${GREEN}$os $kernel${NONE}"
echo -e "${WHITE}Uptime ${GREEN}$uptime${NONE}"
echo -e "${WHITE}Hostname ${GREEN}$hostname${NONE}"
echo -e "${WHITE}Disk usage${NONE}"
echo -e "${GREEN}$free_space${NONE}"
echo -e "${WHITE}Network$(is_connected "$wifi_ipa" "$ethe_ipa")${NONE}"
[[ "$(contains_up_or_down $wifi_ipa)" == false ]] && echo -e "${GREEN}$wifi_ipa${NONE}"
[[ "$(contains_up_or_down $ethe_ipa)" == false ]] && echo -e "${GREEN}$ethe_ipa${NONE}\n"
